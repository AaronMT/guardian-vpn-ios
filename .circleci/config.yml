jobs:
  build:
    macos:
      xcode: "11.1.0"
    environment:
      GOLANG_INSTALLER_NAME: go1.13.3.darwin-amd64.tar.gz
      PROJECT_ROOT: /Users/distiller/project
      DERIVED_DATA: DerivedData/
    steps:
      - checkout
      - restore_cache:
          keys:
            - carthage-cache-v5-{{ .Branch }}-{{ checksum "Cartfile.resolved" }}
      - run: 
          name: Install SwiftLint
          command: |
            echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $BASH_ENV
            brew install swiftlint
      - run:
          name: Build Carthage dependencies
          command: ./bootstrap-if-needed
      - save_cache:
          key: carthage-cache-v5-{{ .Branch }}-{{ checksum "Cartfile.resolved" }}
          paths:
            - Carthage/
      - run:
          name: Install xcpretty
          command: sudo gem install xcpretty
      - run: 
          name: Download and update GoLang, then compile the app
          command: |
            curl -O https://dl.google.com/go/$GOLANG_INSTALLER_NAME
            tar -xzf $GOLANG_INSTALLER_NAME
            export PATH="$PROJECT_ROOT/go/bin:$PATH"
            git submodule update --init --recursive
            xcodebuild clean build-for-testing -scheme FirefoxPrivateNetworkVPN -destination 'generic/platform=iOS Simulator' -sdk iphonesimulator13.1 -derivedDataPath "$PROJECT_ROOT/$DERIVED_DATA"
      - run:
          name: Run unit tests
          command: |
            set -o pipefail && xcodebuild test-without-building -scheme FirefoxPrivateNetworkVPN -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.1' -derivedDataPath "$PROJECT_ROOT/$DERIVED_DATA" | xcpretty -r junit -r html
      - store_test_results:
          path: build/reports/
      - store_artifacts:
          path: build/reports/
          destination: /TestReports/
